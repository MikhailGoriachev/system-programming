<Window x:Class="HomeWork.Views.ProgramInfoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HomeWork.Views"
        mc:Ignorable="d"
        Title="Информация о программе" 
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Background="#320571"
        Foreground="White"
        FontFamily="Verdana"
        FontSize="14"
        Icon="../Images/information.png"
        Loaded="Window_Loaded">
    <Grid>
        <!-- Создание строк -->
        <Grid.RowDefinitions>
            <RowDefinition Height="500"/>
        </Grid.RowDefinitions>
        
        <!-- Создание столбцов -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350"/>
            <ColumnDefinition Width="600"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" 
                    Orientation="Vertical">
            
            <!-- Информация о разработчике -->
            <GroupBox Header="О разработчике"
                      Grid.Column="0"
                      Margin="10">

				<StackPanel Orientation="Vertical">
                    <Label Content="Фамилия"
                           Foreground="White"
                           Background="#FF6E12A5"
                           Height="40"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
						   BorderThickness="2"
                           BorderBrush="Yellow"
                           Margin="10 15 10 0"/>
                    <TextBox Text="Горячев"
                             Foreground="White"
                             Background="#8144D6"
                             Height="30"
                             Margin="10 0"
                             IsReadOnly="True"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             IsTabStop="False"/>
					
                    <Label Content="Имя"
                           Foreground="White"
                           Background="#FF6E12A5"
                           Height="40"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
						   BorderThickness="2"
                           BorderBrush="Yellow"
                           Margin="10 15 10 0"/>
                    <TextBox Text="Михаил"
                             Foreground="White"
                             Background="#8144D6"
                             Height="30"
                             Margin="10 0"
                             IsReadOnly="True"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             IsTabStop="False"/>

                    <Label Content="Группа"
                           Foreground="White"
                           Background="#FF6E12A5"
                           Height="40"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"
						   BorderThickness="2"
                           BorderBrush="Yellow"
                           Margin="10 15 10 0"/>
                    <TextBox Text="ПД011"
                             Foreground="White"
                             Background="#8144D6"
                             Height="30"
                             Margin="10 0 10 15"
                             IsReadOnly="True"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             IsTabStop="False"/>
                    
                </StackPanel>
            </GroupBox>
            
            <!-- Закрытие окна -->
            <Button Name="BtnExit"
                    Content="Выход"
                    Background="#FF6E12A5"
                    Foreground="White"
                    BorderBrush="Yellow"
                    BorderThickness="3"
                    Height="40"
                    Margin="30 120 30 30" 
                    Click="Exit_Click"/>

        </StackPanel>

        <!-- Информация о программе -->
        <GroupBox Header="О программе"
                  Grid.Column="1"
                  Margin="10">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <TextBlock Name="TblInfo"
                           Margin="10"
                           Padding="10"
                           TextWrapping="WrapWithOverflow"
                           Background="#FF6E12A5">
                    <Run Foreground="Yellow" FontWeight="Bold">Задача 1.</Run>Разработайте приложение WPF по следующему заданию – реализация паттерна Производитель – Потребитель, для синхронизации использовать мьютексы:<LineBreak/>
                    a.	Есть текстовый файл, содержащий вещественные числа, записанные по одному в строке. В файле может быть от 12 до 18 чисел.<LineBreak/>
                    b.	Один поток записывает в файл данные и ожидает, пока второй поток их прочитает и обработает. Поток извещает другой поток о завершении записи каждого числа. Поток завершает работу, когда количество чисел в файле станет больше 64<LineBreak/>
                    c.	Второй поток ожидает, пока данные будут записаны в файл, читает файл и выводит числа в две строки – в первую строку в исходном порядке следования, во вторую строку нечетные (нечетная целая часть) в конце строки. Поток извещает другой поток о завершении чтения. Поток завершает работу, когда количество прочитанных и обработанных чисел станет больше 64.<LineBreak/>
					<Run Foreground="Yellow" FontWeight="Bold">Задача 2</Run> Для развития навыков программирования многопоточных приложений с синхронизацией потоков напишите приложение WPF по следующему заданию.<LineBreak/>
                    В порту 3 причала, каждый из которых может принимать один корабль для разгрузки или погрузки, если операция возможна (корабли образуют очередь для погрузки, очередь для разгрузки). Каждый корабль имеет емкость 4 контейнера, разгружается и загружается по одному контейнеру за операцию. Промоделировать работу порта на 15 кораблях, начальная загрузка кораблей – случайная, от пустого до полной загрузки.<LineBreak/>
                    Если на корабле есть контейнеры, корабль сначала разгружается, затем загружается – всегда выполняется полная загрузка (4 контейнера). <LineBreak/>
                    Разгрузка корабля возможна, только если в порту не более 40 контейнеров.<LineBreak/>
                    Погрузка корабля возможна, пока в порту есть хотя бы один контейнер.<LineBreak/>
                </TextBlock>
            </ScrollViewer>
        </GroupBox>
    </Grid>
</Window>
 
Синхронизация потоков

Совместный доступ нескольких потоков к одному ресурсу.
Совместное использование одного ресусра несколькими потоками

Все алгоритмы/технологии синхронизации потоков сводятся к
блокировке других потоков и монопольной работе одного потка
с требуемым ресурсом.
По окончании работы с ресурсом поток должен снять блокировку. 
!! т.е. на время ожидания ресурса параллельной работы нет !! 

Класс атомарных операций - Interlocked
статические методы, выполняющиеся непрерывно (атомарно)
узкий набоор операций
Increment(), Decrement(), Add(), Exchange(), CompareExchange()
Такой способ синхронизации имеет узкую область применения

чему соответствует вызов метода класса Interlocked
Interlocked.Increment(переменная)

генерирует примерно следующее:

cli    --- начало атомарной операции
mov eax,переменная
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ возможное прерывание от планировщика
inc eax
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ возможное прерывание от планировщика
mov переменная,eax
sti    -- конец атомарной операции



Критическая секция
группа операторов кода, получающающая монопольный доступ к некторому ресурсу,
при этом попытки других потоков получить доступ к этому ресурсу блокируются  

Вариант критической секции (КС) - класс Monitor
Это реализация на уровне .NET Framework
Monitor.Enter(ссылкаНаОбъект)   -- вход в КС, при использовании статического класса typeof(ТипСтатическогоКласса)
                                   при обычном объекте - ссылка на объект или this для текущего объекта 
Monitor.Exit(ссылкаНаОбъект)    -- выход из КС

typeof(типСтатическогоОбъекта) - если Monitor применяется для статического объекта 

Упрощение использования монитора - оператор lock
lock(ссылкаНаОбъект) оператор;   - оператор, обрамленный критической секцией
lock(ссылкаНаОбъект) {
	операторы;   - операторы  критической секции
}

Блокировка статического объекта
lock(typeof(типСтатическогоОбъекта)) оператор;   - оператор, обрамленный критической секцией
lock(typeof(типСтатическогоОбъекта)) {
	операторы;   - операторы  критической секции
}

